package test

chan ch(bits[32], id=0, kind=streaming, ops=send_receive, flow_control=none, strictness=proven_mutually_exclusive)

proc my_proc(my_token: token, my_state: bits[32], init={token, 42}) {
  my_token: token = state_read(state_element=my_token, id=7)
  my_state: bits[32] = state_read(state_element=my_state, id=8)
  send.1: token = send(my_token, my_state, channel=ch, id=1)
  literal.2: bits[1] = literal(value=1, id=2)
  receive.3: (token, bits[32]) = receive(send.1, predicate=literal.2, channel=ch, id=3)
  tuple_index.4: token = tuple_index(receive.3, index=0, id=4)
  next_value.13: () = next_value(param=my_token, value=tuple_index.4, id=13)
  next_value.14: () = next_value(param=my_state, value=my_state, id=14)
}
