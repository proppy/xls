# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# See also: https://github.com/marketplace/actions/bazel-action

name: Nightly Release
on:
  # Trigger on `release` branch while we are developing the action.
  push:
    branches:
      - release
  schedule:
    # Nightly at midnight -- uses UTC, so 7am.
    - cron:  '0 7 * * *'
  # This lets us trigger manually from the UI.
  workflow_dispatch:

jobs:
  build:
    name: Nightly Release
    runs-on:
      labels: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # so that git-describe can find previous tags.

      - uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          # Create/use a cache called bazel-cache-22_04-<commit hash>
          # and read the latest cache with prefix bazel-cache-22_04-
          # if it doesn't already exist.
          key: bazel-cache-22_04-${{ github.sha }}
          restore-keys: bazel-cache-22_04-

      - name: Install dependencies via apt
        run: sudo apt-get install python3-distutils python3-dev python-is-python3 libtinfo5  build-essential liblapack-dev libblas-dev gfortran

      - name: Dist
        run: |
          VERSION=$(git describe --match=v*)
          TAG_EXISTS="$(git tag -l $VERSION)"
          bazel build -c opt --stamp --embed_label=${VERSION} --//dist:version=$VERSION --//dist:os=${RUNNER_OS@L} --//dist:arch=${RUNNER_ARCH@L} -- //dist:xls_dist_tar //dist:xls_colab_wheel
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_EXISTS=$TAG_EXISTS" >> $GITHUB_ENV

      - name: Test release archive
        run: |
          tar -xzvvf bazel-bin/dist/xls-${VERSION}-${RUNNER_OS@L}-${RUNNER_ARCH@L}.tar.gz
          cd xls-${VERSION}-${RUNNER_OS@L}-${RUNNER_ARCH@L}/
          [[ -f LICENSE ]]
          [[ -f THIRD_PARTY_NOTICES.txt ]]
        
      - name: Test tools version
        run: |
          cd xls-${VERSION}-${RUNNER_OS@L}-${RUNNER_ARCH@L}/        
          INTERPRETER_MAIN_VERSION=$(./interpreter_main --version)
          [[ ${INTERPRETER_MAIN_VERSION} = ${VERSION} ]]
          IR_CONVERTER_MAIN_VERSION=$(./ir_converter_main --version)
          [[ ${IR_CONVERTER_MAIN_VERSION} = ${VERSION} ]]
          OPT_MAIN_VERSION=$(./opt_main --version)
          [[ ${OPT_MAIN_VERSION} = ${VERSION} ]]
          CODEGEN_MAIN_VERSION=$(./codegen_main --version)
          [[ ${CODEGEN_MAIN_VERSION} = ${VERSION} ]]
          PROTO_TO_DSLX_MAIN_VERSION=$(./proto_to_dslx_main --version)
          [[ ${PROTO_TO_DSLX_MAIN_VERSION} = ${VERSION} ]]

      - name: Test stdlib import
        run: |      
          cd xls-${VERSION}-${RUNNER_OS@L}-${RUNNER_ARCH@L}/      
          ./interpreter_main ${GITHUB_WORKSPACE}/xls/examples/sha256.x
          ./ir_converter_main ${GITHUB_WORKSPACE}/xls/examples/sha256.x

      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.TAG_EXISTS == ''
        with:
          tag_name: ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          files: bazel-bin/dist/xls*

      - name: Cleanup
        run: |
          rm -fR bazel-bin/dist/ # do not cache released artifacts
